{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_development\\\\06-usereducer-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'SET_EMAIL') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'SET_ISVALID') {\n    console.log(state.isValid);\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  } // s\n\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'SET_PSWD') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 7\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, emailDispath] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, passwordDispatcher] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, []);\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    emailDispath({\n      type: 'SET_EMAIL',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    passwordDispatcher({\n      type: 'SET_PSWD',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    emailDispath({\n      type: 'SET_ISVALID'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    passwordDispatcher({\n      type: 'SET_ISVALID'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"HYD/xb1OAD9jMuj/IYh2Iffm2zw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/web_development/06-usereducer-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","console","log","passwordReducer","trim","length","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","emailDispath","passwordState","passwordDispatcher","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect ,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nconst emailReducer=(state,action)=>\n{\nif(action.type==='SET_EMAIL')\n{\n  return {value:action.val,isValid:action.val.includes('@')}\n}\nif(action.type==='SET_ISVALID')\n{\n console.log(state.isValid)\n  return {value:state.value , isValid:state.value.includes('@')}\n}\n// s\n}\nconst passwordReducer=(state,action)=>\n{\nif(action.type==='SET_PSWD')\n{\n return {value:action.val ,isValid:action.val.trim().length>7 }\n}\n}\nconst Login = (props) => {\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState,emailDispath]=useReducer(emailReducer,{value:'',isValid:null});\n  const [passwordState,passwordDispatcher]=useReducer(passwordReducer,{value:'' ,isValid:null});\n\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    emailDispath({type:'SET_EMAIL' , val:event.target.value});\n\n    setFormIsValid(\n      emailState.isValid && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    passwordDispatcher({type:'SET_PSWD',val:event.target.value});\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    emailDispath({type:'SET_ISVALID'})\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    passwordDispatcher({type:'SET_ISVALID'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}