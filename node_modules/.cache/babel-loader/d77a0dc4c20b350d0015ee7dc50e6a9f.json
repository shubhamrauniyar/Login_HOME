{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_development\\\\06-usereducer-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'SET_EMAIL') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'SET_ISVALID') {\n    console.log(state.isValid);\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'SET_PSWD') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 7\n    };\n  }\n\n  if (action.type === 'SET_ISVALID') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 7\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, emailDispath] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, passwordDispatcher] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailState.isValid, passwordState.isValid]);\n\n  const emailChangeHandler = event => {\n    emailDispath({\n      type: 'SET_EMAIL',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    passwordDispatcher({\n      type: 'SET_PSWD',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    emailDispath({\n      type: 'SET_ISVALID'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    passwordDispatcher({\n      type: 'SET_ISVALID'\n    });\n  };\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (emailState.isValid && passwordState.isValid) {\n      props.onLogin(emailState.value, passwordState.value);\n    } else if (emailState.isValid) {\n      emailRef.activate();\n    } else {\n      passwordRef.current.activate();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: emailState.value // ref={emailRef}\n        ,\n        type: \"email\",\n        id: \"email\",\n        label: \"E-Mail\",\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        isValid: emailState.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: passwordState.value // ref={passwordRef}\n        ,\n        type: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        onChange: passwordChangeHandler,\n        onBlur: validateEmailHandler,\n        isValid: passwordState.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"JupyXV5raPtCN0rM2Cac6UcE2Zw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/web_development/06-usereducer-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useRef","Card","classes","Button","Input","emailReducer","state","action","type","value","val","isValid","includes","console","log","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","emailDispath","passwordState","passwordDispatcher","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","emailRef","passwordRef","submitHandler","preventDefault","onLogin","activate","current","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect ,useReducer, useRef} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nconst emailReducer=(state,action)=>\n{\nif(action.type==='SET_EMAIL')\n{\n  return {value:action.val,isValid:action.val.includes('@')}\n}\nif(action.type==='SET_ISVALID')\n{\n console.log(state.isValid)\n  return {value:state.value , isValid:state.value.includes('@')}\n}\n\n}\nconst passwordReducer=(state,action)=>\n{\nif(action.type==='SET_PSWD')\n{\n return {value:action.val ,isValid:action.val.trim().length>7 }\n}\nif(action.type==='SET_ISVALID')\n{\n  return {value:state.value,isValid:state.value.trim().length>7}\n}\n}\nconst Login = (props) => {\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState,emailDispath]=useReducer(emailReducer,{value:'',isValid:null});\n  const [passwordState,passwordDispatcher]=useReducer(passwordReducer,{value:'' ,isValid:null});\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailState.isValid, passwordState.isValid]);\n\n  const emailChangeHandler = (event) => {\n    emailDispath({type:'SET_EMAIL' , val:event.target.value});\n\n    // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    passwordDispatcher({type:'SET_PSWD',val:event.target.value});\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    emailDispath({type:'SET_ISVALID'})\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    passwordDispatcher({type:'SET_ISVALID'});\n  };\n  const emailRef=useRef();\n  const passwordRef=useRef();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(emailState.isValid && passwordState.isValid)\n    {\n      props.onLogin(emailState.value, passwordState.value);\n    }\n    else if(emailState.isValid)\n    {\n      emailRef.activate();\n    }\n    else\n    {\n      passwordRef.current.activate();\n    }\n   \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input  value={emailState.value}\n          // ref={emailRef}\n          type=\"email\"\n          id=\"email\"\n          label=\"E-Mail\"\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n          isValid={emailState.isValid}>\n        </Input>\n        \n        <Input  value={passwordState.value}\n          // ref={passwordRef}\n          type=\"password\"\n          id=\"password\"\n          label=\"Password\"\n          onChange={passwordChangeHandler}\n          onBlur={validateEmailHandler}\n          isValid={passwordState.isValid}>\n        </Input>\n\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} >\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}